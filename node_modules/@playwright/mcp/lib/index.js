"use strict";
/**
 * Copyright (c) Microsoft Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createServer = createServer;
const server_1 = require("./server");
const common_1 = __importDefault(require("./tools/common"));
const files_1 = __importDefault(require("./tools/files"));
const install_1 = __importDefault(require("./tools/install"));
const keyboard_1 = __importDefault(require("./tools/keyboard"));
const navigate_1 = __importDefault(require("./tools/navigate"));
const pdf_1 = __importDefault(require("./tools/pdf"));
const snapshot_1 = __importDefault(require("./tools/snapshot"));
const tabs_1 = __importDefault(require("./tools/tabs"));
const screen_1 = __importDefault(require("./tools/screen"));
const console_1 = require("./resources/console");
const snapshotTools = [
    ...common_1.default,
    ...(0, files_1.default)(true),
    ...install_1.default,
    ...(0, keyboard_1.default)(true),
    ...(0, navigate_1.default)(true),
    ...pdf_1.default,
    ...snapshot_1.default,
    ...(0, tabs_1.default)(true),
];
const screenshotTools = [
    ...common_1.default,
    ...(0, files_1.default)(false),
    ...install_1.default,
    ...(0, keyboard_1.default)(false),
    ...(0, navigate_1.default)(false),
    ...pdf_1.default,
    ...screen_1.default,
    ...(0, tabs_1.default)(false),
];
const resources = [
    console_1.console,
];
const packageJSON = require('../package.json');
function createServer(options) {
    const allTools = options?.vision ? screenshotTools : snapshotTools;
    const tools = allTools.filter(tool => !options?.capabilities || tool.capability === 'core' || options.capabilities.includes(tool.capability));
    return (0, server_1.createServerWithTools)({
        name: 'Playwright',
        version: packageJSON.version,
        tools,
        resources,
        browserName: options?.browserName,
        userDataDir: options?.userDataDir ?? '',
        launchOptions: options?.launchOptions,
        cdpEndpoint: options?.cdpEndpoint,
    });
}
