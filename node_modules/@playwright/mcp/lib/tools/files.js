"use strict";
/**
 * Copyright (c) Microsoft Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const zod_1 = require("zod");
const zod_to_json_schema_1 = require("zod-to-json-schema");
const uploadFileSchema = zod_1.z.object({
    paths: zod_1.z.array(zod_1.z.string()).describe('The absolute paths to the files to upload. Can be a single file or multiple files.'),
});
const uploadFile = captureSnapshot => ({
    capability: 'files',
    schema: {
        name: 'browser_file_upload',
        description: 'Upload one or multiple files',
        inputSchema: (0, zod_to_json_schema_1.zodToJsonSchema)(uploadFileSchema),
    },
    handle: async (context, params) => {
        const validatedParams = uploadFileSchema.parse(params);
        const tab = context.currentTab();
        return await tab.runAndWait(async () => {
            await tab.submitFileChooser(validatedParams.paths);
        }, {
            status: `Chose files ${validatedParams.paths.join(', ')}`,
            captureSnapshot,
            noClearFileChooser: true,
        });
    },
});
exports.default = (captureSnapshot) => [
    uploadFile(captureSnapshot),
];
