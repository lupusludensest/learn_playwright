"use strict";
/**
 * Copyright (c) Microsoft Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const zod_1 = require("zod");
const zod_to_json_schema_1 = __importDefault(require("zod-to-json-schema"));
const pressKeySchema = zod_1.z.object({
    key: zod_1.z.string().describe('Name of the key to press or a character to generate, such as `ArrowLeft` or `a`'),
});
const pressKey = captureSnapshot => ({
    capability: 'core',
    schema: {
        name: 'browser_press_key',
        description: 'Press a key on the keyboard',
        inputSchema: (0, zod_to_json_schema_1.default)(pressKeySchema),
    },
    handle: async (context, params) => {
        const validatedParams = pressKeySchema.parse(params);
        return await context.currentTab().runAndWait(async (tab) => {
            await tab.page.keyboard.press(validatedParams.key);
        }, {
            status: `Pressed key ${validatedParams.key}`,
            captureSnapshot,
        });
    },
});
exports.default = (captureSnapshot) => [
    pressKey(captureSnapshot),
];
